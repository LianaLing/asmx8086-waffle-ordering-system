   .MODEL SMALL
.STACK 100
.DATA
;-----------------STAFF LOGIN MODULE----------------
;MESSAGES
 M1 DB "ENTER STAFF ID: $"
 M2 DB "PASSWORD: $"
 OK DB "------WELCOME------$"
 NO DB "------ACCESS DENIED------$"
 T3 DB "------YOU HAVE ENTERED THE INCORRECT ID OR PASSWORD TOO MANY TIMES------$"

;VERIFICATION PART
 DID DB "WAFFLE"
 DPSW DB "LOVEIT"
 
 UID DB 6 DUP (?)
 UPSW DB 6 DUP (?)
;-----------------STAFF LOGIN MODULE ENDS----------------



;-----------------MENU DISPLAY MODULE---------------------
;MESSAGES
 MSG1  DB 13,10, "         [WAFFLE SET]$"
 MSG2  DB 13, 10, "WAFFLE = RM 10.00$"
 MSG3  DB 13, 10, "    [CHOOSE TWO FLAVOURS]:$"
 MSG4  DB 13, 10, "(1) CHOCOLATE      = RM 0.70$"
 MSG5  DB 13, 10, "(2) PEANUT BUTTER  = RM 0.50$"
 MSG6  DB 13, 10, "(3) STRAWBERRY     = RM 1.00$"
 MSG7  DB 13, 10, "(4) BLUEBERRY      = RM 1.00$"
 MSG8  DB 13, 10, "(5) KAYA           = RM 0.30$"
;-----------------MENU DISPLAY MODULE ENDS---------------------




;----------------INPUT MODULE----------------
;MESSAGES 
 SETM DB 13,10,"NUMBER OF SETS (MAX 5 SETS): $"
 SM   DB 13,10,"**********SET**********$"
 F1M  DB 13,10,"  FLAVOUR 1: $"
 F2M  DB 13,10,"  FLAVOUR 2: $"
 
;VARIABLES
 NL DB 13,10,"$"
 SET  DB 0
 FLV1 DB 5 DUP (0)
 FLV2 DB 5 DUP (0)
;----------------INPUT MODULE ENDS----------------




;------------------LOOP WHOLE PROGRAM MODULE------------------
;MESSAGES
 MOREM DB 13,10,"  NEXT WAFFLE? (Y=YES)      : $"
 EXITPROGM DB 13,10,"EXITING PROGRAM...$"
 
;VARIABLES 
 MORE DB 0
;------------------LOOP WHOLE PROGRAM MODULE ENDS------------------



 
;-----------------SUBTOTAL CALCULATION MODULE-----------------
;CONSTANTS
 PFLV  DB 70,50,100,100,30             ;PRICES FOR EACH FLAVOUR
 WAFFLE  DW 1000                       ;RM 10.00 WAFFLE

;MESSAGES
 SUBTM DB 13,10,"  PRICE OF WAFFLE           : RM$"
 
;VARIABLES
 SUBTOTAL DW 0
 SUBTR DB 3 DUP (0)
 SUBTQ DB 3 DUP (0)
 
;FOR CALCULATION & DISPLAY
 TEN DB 10
 HUND DB 100
 THOU DW 1000
 TENT DW 10000
 ;-----------------SUBTOTAL CALCULATION MODULE ENDS-----------------



 
;-----------------ASK MEMBER MODULE-----------------
;MESSAGES
 MBRM DB 13,10,"  MEMBER? (Y=YES)           : $"
 IDM  DB 13,10,"  ENTER MEMBER ID (1 DIGIT) : $"
 NOTM DB 13,10,"ERROR: NOT A MEMBER.$"
 REGM DB 13,10,"REGISTER AS MEMBER FOR 10% DISCOUNT? (Y=YES)  : $"
 OKM  DB 13,10,"ELIGIBLE FOR 10% DISCOUNT.$"
 SIGNEDM DB 13,10,"SIGNED UP SUCCESSFULLY. MEMBER ID ASSIGNED : $"
 FULLM DB 13,10,"MEMBERS FULL. REGISTRATION FAILED.$"

;VARIABLES
 MEMBER DB ?             ;RESPONSE
 REGISTER DB ?           ;RESPONSE
 MEMID DB 3 DUP (0)
 SYSID DB "4","5","6"
;-----------------ASK MEMBER MODULE ENDS-----------------




;-----------------MEMBER DISCOUNT, SST & TOTAL CALCULATION MODULE-----------------
;CONSTANTS
 MDIS DB 10                            ;10% MEMBER DISCOUNT
 SST DB 6                              ;6% SST
 
;VARIABLES
 AFTERDIS DW 0
 AFTERSST DW 0
 AFTERSSTR DB 0
 AFTERSSTQ DB 0
 TOTAL DW 0
;-----------------MEMBER DISCOUNT, SST & TOTAL CALCULATION MODULE ENDS-----------------




;------------------AMOUNT PAID INPUT & CHANGE CALCULATION MODULE------------------
;MESSAGES
 AMTPAIDM DB 13,10,"  AMOUNT PAID (MAX RM100)   : RM$"
 PRESSENTER DB 13,10,"PRESS ENTER IF AMOUNT PAID IS LESSER THAN RM100. ONLY ACCEPT NOTES (NO CENTS).$"
 ERRM DB 13,10,"AMOUNT PAID ENTERED IS INVALID. PLEASE RE-ENTER.$"
 
;VARIABLES
 AMTPAID DB 3 DUP (0)
 PAIDWHOLE DW 0
 CHANGE  DW 0
 CHANGER DB 3 DUP (0)
 CHANGEQ DB 3 DUP (0)
;------------------AMOUNT PAID INPUT & CHANGE CALCULATION MODULE ENDS------------------

 
 
 
;------------------DISPLAY MEMBER DISCOUNT, SST, TOTAL & CHANGE MODULE------------------
;MESSAGES
 MDISM DB 13,10,"  10% MEMBER DISCOUNT       : RM$"
 SSTM DB 13,10,"  6% SST CHARGED            : RM$"
 TOTALM DB 13,10,"  TOTAL AMOUNT DUE          : RM$"
 CHANGEM DB 13,10,"  CHANGE DUE                : RM$"
 
;VARIABLES
 MEMDISR DB 2 DUP (0)
 MEMDISQ DB 2 DUP (0)
 SSTR DB 2 DUP (0)
 SSTQ DB 2 DUP (0)
 TTLR DB 3 DUP (0)
 TTLQ DB 3 DUP (0)
;------------------DISPLAY MEMBER DISCOUNT, SST, TOTAL & CHANGE MODULE ENDS------------------
.CODE
MAIN PROC
 MOV AX,@DATA
 MOV DS,AX
 
;----------------------------------------------------------CODE STARTS----------------------------------------------------------------------




;-----------------STAFF LOGIN MODULE----------------
 MOV DI,0
 LOGIN:
 ;----------------FORMATTING
  MOV AX,0600H
  MOV BH,70H
  MOV CX,0000H
  MOV DX,184FH
  INT 10H

  MOV AH,02H
  MOV BH,00H
  MOV DH,0BH
  MOV DL,1AH
  INT 10H
  
  MOV AH,09H
  LEA DX,M1
  INT 21H
  INC DI
  
 ;---------------STAFF ID
  MOV CX,6
  MOV SI,0
  ID:
   MOV AH,01H
   INT 21H
   MOV UID[SI],AL
   INC SI
   LOOP ID
   
 ;----------------FORMATTING
  MOV AH,02H
  MOV BH,00H
  MOV DH,0CH
  MOV DL,1AH
  INT 10H
   
  MOV AH,09H
  LEA DX,M2
  INT 21H
   
 ;---------------STAFF PSW
  MOV CX,6
  MOV SI,0
  PSW:
   MOV AH,01H
   INT 21H
   MOV UPSW[SI],AL
   INC SI
   LOOP PSW
   
 ;---------------CHK ID
  MOV AX,0
  MOV SI,0
  CHKID:
   CMP SI,6
   JE CLEAR
   MOV AL,UID[SI]
   CMP AL,DID[SI]
   JE NEXTID
   JNE DENY
   
  NEXTID:
   INC SI
   JMP CHKID
  
 DENY:
 ;----------------FORMATTING
  MOV AX,0600H
  MOV BH,74H
  MOV CX,0D00H
  MOV DX,0D4FH
  INT 10H
  
  MOV AH,02H
  MOV BH,00H
  MOV DH,0DH
  MOV DL,19H
  INT 10H
  
  MOV AH,09H
  LEA DX,NO
  INT 21H
  
 ;-----------------SYSTEM PAUSE
  MOV AH,07H
  INT 21H
  
  CMP DI,3
  JE THREE
  JMP LOGIN
  
;-----------------CHK PSW
 CLEAR:
  MOV AX,0
  MOV SI,0
  JMP CHKPSW
  
 CHKPSW:
  CMP SI,6
  JE ALLOW
  MOV AL,UPSW[SI]
  CMP AL,DPSW[SI]
  JE NEXTPSW
  JNE DENY
  
 NEXTPSW:
  INC SI
  JMP CHKPSW
  
 THREE:
 ;----------------FORMATTING
  MOV AX,0600H
  MOV BH,74H
  MOV CX,0E00H
  MOV DX,0E4FH
  INT 10H
  
  MOV AH,02H
  MOV BH,00H
  MOV DH,0EH
  MOV DL,03H
  INT 10H
  
  MOV AH,09H
  LEA DX,T3
  INT 21H
  JMP ACCESSDENIED
  
 ALLOW:
 ;----------------FORMATTING
  MOV AH,02H
  MOV BH,00H
  MOV DH,0DH
  MOV DL,1CH
  INT 10H

  MOV AH,09H
  LEA DX,OK
  INT 21H
  JMP DISPLAYMENU
;-----------------STAFF LOGIN MODULE ENDS---------------- 




;-----------------MENU DISPLAY MODULE---------------------
 DISPLAYMENU:
  MOV AH,09H
  LEA DX,MSG1
  INT 21H
  
  MOV AH,09H
  LEA DX,MSG2
  INT 21H
  
  MOV AH,09H
  LEA DX,MSG3
  INT 21H
  
  MOV AH,09H
  LEA DX,MSG4
  INT 21H
  
  MOV AH,09H
  LEA DX,MSG5
  INT 21H
  
  MOV AH,09H
  LEA DX,MSG6
  INT 21H
  
  MOV AH,09H
  LEA DX,MSG7
  INT 21H
  
  MOV AH,09H
  LEA DX,MSG8
  INT 21H
;-----------------MENU DISPLAY MODULE ENDS---------------------




;----------------INPUT MODULE----------------
 INPUTBEGIN:
	 MOV BX,0
	 
	;----------INPUT SET
	 MOV AH,09H
	 LEA DX,SETM
	 INT 21H
	 
	 MOV AH,01H
	 INT 21H
	 MOV SET,AL
	 
	 ;------------LOOP FLV ACCORDING TO SET
	 SUB SET,30H	;SET=0XH 
	 MOV CX,0
	 MOV CL,SET
	 MOV SI,0
	 
	 FLAVOURS:	 
	 ;------------INPUT FLV1
	  MOV AH,09H
	  LEA DX,NL
	  INT 21H
	  
	  MOV AH,09H
	  LEA DX,SM
	  INT 21H
	  
	  MOV AH,09H
	  LEA DX,NL
	  INT 21H
	  
	  MOV AH,09H
	  LEA DX,F1M
	  INT 21H
	 
	  MOV AH,01H
	  INT 21H
	  MOV FLV1[SI],AL
	  SUB FLV1[SI],30H
	 
	 ;------------INPUT FLV2
	  MOV AH,09H
	  LEA DX,F2M
	  INT 21H
	  
	  MOV AH,01H
	  INT 21H
	  MOV FLV2[SI],AL
	  SUB FLV2[SI],30H
	  INC SI
	  LOOP FLAVOURS
;----------------INPUT MODULE ENDS----------------




;-----------------SUBTOTAL CALCULATION MODULE-----------------
;------------CALCULATION   
 MOV CX,0
 MOV CL,SET 
 MOV SI,0
 MOV DX,0
 CHKFLV1:
  MOV AX,0			;CLEAR AX
  MOV AL,FLV1[SI]
  CMP SI,CX
  JE CLEARFLV1
  CMP AL,01
  JE PRICE1FLV
  CMP AL,02
  JE PRICE2FLV
  CMP AL,03
  JE PRICE3FLV
  CMP AL,04
  JE PRICE4FLV
  CMP AL,05
  JE PRICE5FLV
  
 PRICE1FLV:   
  MOV DL,PFLV[0]
  ADD BX,DX	;RM 0.70 CHOC
  INC SI
  JMP CHKFLV1
 
 PRICE2FLV:
  MOV DL,PFLV[1]
  ADD BX,DX	;RM 0.50 PB
  INC SI
  JMP CHKFLV1
 
 PRICE3FLV:
  MOV DL,PFLV[2]
  ADD BX,DX	;RM 1.00 STRB
  INC SI
  JMP CHKFLV1
 
 PRICE4FLV:  
  MOV DL,PFLV[3]
  ADD BX,DX	;RM 1.00 BLUB
  INC SI
  JMP CHKFLV1
 
 PRICE5FLV:  
  MOV DL,PFLV[4]
  ADD BX,DX	;RM 0.30 KAYA
  INC SI
  JMP CHKFLV1
  
 CLEARFLV1:
  MOV CX,0 
  MOV CL,SET
  MOV SI,0
  JMP CHKFLV2
  
 CHKFLV2:
  MOV AX,0			;CLEAR AX
  MOV AL,FLV2[SI]
  CMP SI,CX
  JE CLEARFLV2
  CMP AL,01
  JE PRICE1FLV2
  CMP AL,02
  JE PRICE2FLV2
  CMP AL,03
  JE PRICE3FLV2
  CMP AL,04
  JE PRICE4FLV2
  CMP AL,05
  JE PRICE5FLV2
  
 PRICE1FLV2:    
  MOV DL,PFLV[0]
  ADD BX,DX	;RM 0.70 CHOC
  INC SI
  JMP CHKFLV2
 
 PRICE2FLV2:
  MOV DL,PFLV[1]
  ADD BX,DX	;RM 0.50 PB
  INC SI
  JMP CHKFLV2
 
 PRICE3FLV2:  
  MOV DL,PFLV[2]
  ADD BX,DX	;RM 1.00 STRB
  INC SI
  JMP CHKFLV2
 
 PRICE4FLV2:
  MOV DL,PFLV[3]
  ADD BX,DX	;RM 1.00 BLUB
  INC SI
  JMP CHKFLV2
 
 PRICE5FLV2: 
  MOV DL,PFLV[4]
  ADD BX,DX	;RM 0.30 KAYA
  INC SI
  JMP CHKFLV2
  
 CLEARFLV2:
  MOV CX,0 
  MOV CL,SET
  MOV SI,0
  JMP CALCSUB

 CALCSUB:
  MOV AX,0
  MOV AL,SET
  MUL WAFFLE
  ADD AX,BX
  MOV SUBTOTAL,AX
  
  DIV HUND				;AX = 1120 / 100 = 2011
  MOV SUBTR[0],AH		;SUBTR1 = 20
  MOV SUBTQ[0],AL		;SUBTD1 = 11
  
  MOV AX,0
  MOV AL,SUBTQ[0]		;AX = 0011
  DIV TEN				;AX = 0011 / 10 = 0101
  MOV SUBTR[1],AH		;SUBTR2 = 01
  MOV SUBTQ[1],AL	 	;SUBTD2 = 01 (CAN DISPLAY [1][1] OUT OF 1120)

  MOV AX,0
  MOV AL,SUBTR[0]		;AX = 0020
  DIV TEN				;AX = 0020 / 10 = 0002
  MOV SUBTR[2],AH		;SUBTR2 = 00
  MOV SUBTQ[2],AL	 	;SUBTD2 = 02 (CAN DISPLAY [2][0] OUT OF 1120)

  MOV CX,2
  MOV SI,1
 CONVHEX:
  ADD SUBTQ[SI],30H
  ADD SUBTR[SI],30H
  INC SI
  LOOP CONVHEX
 
 ;--------------------------------DISPLAY SUBTOTAL
 DISPLAYSUBT:
  MOV AH,09H
  LEA DX,NL
  INT 21H
  
  MOV AH,09H
  LEA DX,SUBTM
  INT 21H
 
  MOV AH,02H
  MOV DL,SUBTQ[1]
  INT 21H
  
  MOV AH,02H
  MOV DL,SUBTR[1]
  INT 21H
  
  MOV AH,02H
  MOV DL,2EH	;DISPLAY POINT
  INT 21H  
  
  MOV AH,02H
  MOV DL,SUBTQ[2]
  INT 21H
 
  MOV AH,02H
  MOV DL,SUBTR[2]
  INT 21H
;-----------------SUBTOTAL CALCULATION MODULE ENDS-----------------




;-----------------ASK MEMBER MODULE-----------------
;IS MEMBER?
 MOV AH,09H
 LEA DX,MBRM
 INT 21H

 MOV AH,01H
 INT 21H
 MOV MEMBER,AL

 CMP MEMBER,"Y"
 JE ENTERMEMID
 JNE REGISTERMEM
;IF IS MEMBER, CHECK ID. IF NOT MEMBER, ASK TO REGISTER.

 ENTERMEMID:
  MOV AH,09H
  LEA DX,IDM
  INT 21H
  
  MOV AH,01H
  INT 21H
 
 MOV SI,0
 CHKMEMBER:
  CMP SI,3
  JE NOTMEMBER
  CMP MEMID[SI],AL
  JNE CHKNEXTMEM
  JE ELIGIBLE
 ;IF NOT EQUAL, CHECK NEXT POSITION UNTIL ALL HAVE BEEN CHECKED. IF NONE ARE EQUAL, JUMP TO NOT MEMBER.
 ;IF EQUAL, JUMP TO ELIGIBLE.
  
;REGISTER?
 REGISTERMEM:
  MOV AH,09H
  LEA DX,REGM
  INT 21H
  
  MOV AH,01H
  INT 21H
  MOV REGISTER,AL
  
  CMP REGISTER,"Y"
  JE SIGNUP
  JNE CALCSSTJ
 ;IF YES, SIGN UP. IF NO, JUMP TO SST (NO MEMBER DISCOUNT).
  
 NOTMEMBER:
  MOV AH,09H
  LEA DX,NOTM
  INT 21H
  JMP REGISTERMEM
 ;NOT A MEMBER ALERT. JUMPS BACK TO REGISTER.
  
 CHKNEXTMEM:
  INC SI
  JMP CHKMEMBER
  
 SIGNUP: 
  MOV SI,0
  ALLOCATEMEMID:
   CMP SI,3
   JE MEMFULL
   CMP MEMID[SI],0
   JE SAVEID
   JNE NEXTMEMID
  ;IF ALL SLOTS ARE FULL, JUMP TO MEMBER FULL. IF NOT, SAVE ID INTO MEMBER ID.
 
 NEXTMEMID:
  INC SI
  JMP ALLOCATEMEMID
  
 SAVEID:      
  MOV AX,0
  MOV AL,SYSID[SI]
  MOV MEMID[SI],AL
  JMP SUCCESSMEM
 ;SAVED ID AND JUMPS TO SUCCESSFUL ALERT.
  
 SUCCESSMEM:
  MOV AH,09H
  LEA DX,SIGNEDM
  INT 21H
  
  MOV AH,02H
  MOV DL,MEMID[SI]
  INT 21H
  JMP ELIGIBLE
 ;SUCCESSFUL ALERT AND SHOWS ASSIGNED MEMBER ID.
  
 CALCSSTJ:
  MOV AFTERDIS,0
  JMP CALCSST
  
 ELIGIBLE:
  MOV AH,09H
  LEA DX,OKM
  INT 21H
  JE MEMDISCOUNT
 ;ELIGIBLE ALERT AND JUMPS TO MEMBER DISCOUNT CALCULATION.
  
 MEMFULL:
  MOV AH,09H
  LEA DX,FULLM
  INT 21H
  JMP CALCSSTJ
 ;FAIL ALERT AND JUMPS TO SST CALCULATION (NO MEMBER DISCOUNT).
;-----------------ASK MEMBER MODULE ENDS-----------------




;-----------------MEMBER DISCOUNT, SST & TOTAL CALCULATION MODULE-----------------
;---------------------------------MEMBER DISCOUNT
 MEMDISCOUNT: 
  MOV DX,0
  MOV AX,0      
  MOV AX,SUBTOTAL
  MOV CX,0
  MOV CL,MDIS
  DIV CX
  MOV AFTERDIS,AX
  JMP DISPLAYMDIS

;----------------------------------SST
 CALCSST:
 ;-----------------------DIVIDE BY 100
  MOV AX,0
  MOV DX,0
  MOV AX,SUBTOTAL
  SUB AX,AFTERDIS
  MOV BX,0
  MOV BL,HUND
  DIV BX
  MOV AFTERSSTR,DL
  MOV AFTERSSTQ,AL
     
 ;-----------------------TIMES 6                     
  MOV AX,0
  MOV AL,AFTERSSTQ   
  MUL SST   
  MOV AFTERSST,AX
  
  MOV AX,0
  MOV AL,AFTERSSTR
  MUL SST    ;AX=0324
  DIV HUND   ;AX=2403
  MOV AFTERSSTR,AH
  MOV AFTERSSTQ,AL  
  MOV AX,0
  MOV AL,AFTERSSTQ
  ADD AFTERSST,AX
  
  CMP AFTERSSTR,50
  JGE ROUNDUP
  JNGE DISPLAYSSTJ        ;PREVENT JMP OUT OF RANGE

 DISPLAYSSTJ:
  JMP DISPLAYSST   
  
 ROUNDUP:
  ADD AFTERSST,01
  JMP DISPLAYSST
  
 CALCTOL:
  MOV AX,0
  MOV AX,SUBTOTAL
  SUB AX,AFTERDIS
  ADD AX,AFTERSST
  MOV TOTAL,AX
;-----------------MEMBER DISCOUNT, SST & TOTAL CALCULATION MODULE ENDS-----------------




;------------------DISPLAY MEMBER DISCOUNT, SST, TOTAL & CHANGE MODULE------------------
;--------------------------------DISPLAY TOTAL
 DIV HUND				
 MOV TTLR[0],AH		
 MOV TTLQ[0],AL		
 
 MOV AX,0
 MOV AL,TTLQ[0]		
 DIV TEN				
 MOV TTLR[1],AH		
 MOV TTLQ[1],AL	 	

 MOV AX,0
 MOV AL,TTLR[0]		
 DIV TEN				
 MOV TTLR[2],AH		
 MOV TTLQ[2],AL	 	

 MOV CX,2
 MOV SI,1
 CONVHEX2:
  ADD TTLQ[SI],30H
  ADD TTLR[SI],30H
  INC SI
  LOOP CONVHEX2
 
 DISPLAYTTL:
  MOV AH,09H
  LEA DX,TOTALM
  INT 21H

  MOV AH,02H
  MOV DL,TTLQ[1]
  INT 21H
  
  MOV AH,02H
  MOV DL,TTLR[1]
  INT 21H
  
  MOV AH,02H
  MOV DL,2EH	;DISPLAY POINT
  INT 21H  
  
  MOV AH,02H
  MOV DL,TTLQ[2]
  INT 21H

  MOV AH,02H
  MOV DL,TTLR[2]
  INT 21H
  
  MOV AH,09H
  LEA DX,NL
  INT 21H
  JMP AMOUNTPAID
  
;------------------LOOP WHOLE PROGRAM MODULE------------------
 MOREWAFFLE:
  MOV AH,09H
  LEA DX,MOREM
  INT 21H

  MOV AH,01H
  INT 21H
  MOV MORE,AL

  MOV AH,09H
  LEA DX,NL
  INT 21H

  CMP MORE,"Y"
  JE INPUTBEGINJ
  JNE EXITJ
  
  INPUTBEGINJ:
   JMP INPUTBEGIN
   
  EXITJ:
   JMP EXIT
;------------------LOOP WHOLE PROGRAM MODULE ENDS------------------
   
;------------------DISPLAY MEMBER DISCOUNT
 DISPLAYMDIS:
  MOV AX,AFTERDIS		;AX=0112
  DIV HUND				;AX=0112/100=1201
  MOV MEMDISR[0],AH	;MEMDISR[0]=12	
  MOV MEMDISQ[0],AL	;MEMDISQ[0]=01
  
  MOV AX,0
  MOV AL,MEMDISR[0]	;AX=0012		
  DIV TEN				;AX=0012/10=0201
  MOV MEMDISR[1],AH	;MEMDISR=02
  MOV MEMDISQ[1],AL	;MEMDISQ=01
  
 ;-----------------DISPLAY MEMDIS = [1].[1][2] 	
  ADD MEMDISQ[0],30H
  ADD MEMDISQ[1],30H
  ADD MEMDISR[1],30H

  MOV AH,09H
  LEA DX,MDISM
  INT 21H

  MOV AH,02H
  MOV DL,MEMDISQ[0]
  INT 21H
  
  MOV AH,02H
  MOV DL,2EH	;DISPLAY POINT
  INT 21H

  MOV AH,02H
  MOV DL,MEMDISQ[1]
  INT 21H

  MOV AH,02H
  MOV DL,MEMDISR[1]
  INT 21H
  JMP CALCSST

;------------------DISPLAY SST
 DISPLAYSST:
  MOV AX,0
  MOV AX,AFTERSST   ;AX=0324  
  DIV HUND				      ;AX=2403
  MOV SSTR[0],AH	   ;SSTR=24	
  MOV SSTQ[0],AL		  ;SSTQ=03

  MOV AX,0
  MOV AL,SSTR[0]		  ;AX=0024
  DIV TEN				       ;AX=0402
  MOV SSTR[1],AH		  ;SSTR=04
  MOV SSTQ[1],AL	 	 ;SSTQ=02
  
 ;-----------------DISPLAY SST = [3].[2][4]
  ADD SSTQ[0],30H
  ADD SSTQ[1],30H
  ADD SSTR[1],30H
	  
  MOV AH,09H
  LEA DX,SSTM
  INT 21H

  MOV AH,02H
  MOV DL,SSTQ[0]
  INT 21H
  
  MOV AH,02H
  MOV DL,2EH	;DISPLAY POINT
  INT 21H
  
  MOV AH,02H
  MOV DL,SSTQ[1]
  INT 21H
  
  MOV AH,02H
  MOV DL,SSTR[1]
  INT 21H  
  JMP CALCTOL
 
 
 
 
;------------------AMOUNT PAID INPUT & CHANGE CALCULATION MODULE------------------
;-----------------------AMOUNT PAID INPUT
 AMOUNTPAID:
  MOV AH,09H
  LEA DX,PRESSENTER
  INT 21H
  
  MOV AH,09H
  LEA DX,AMTPAIDM
  INT 21H

  MOV CX,3
  MOV SI,0
  INPUTAMTPAID:
   MOV AH,01H
   INT 21H
   MOV AMTPAID[SI],AL
   SUB AMTPAID[SI],30H 
   INC SI
   LOOP INPUTAMTPAID
  
  ADD AMTPAID[2],30H
  CMP AMTPAID[2],0DH           ;CHK IF ENTER KEY
  JE VERIFY2DIGIT
  JNE CALCCHANGE3DIGIT         ;NO NEED CHK IF 100
  
;------------------------VERIFICATION
 VERIFY2DIGIT:
  ADD AMTPAID[1],30H           ;CHK IF SINGLE DIGIT INPUT
  CMP AMTPAID[1],0DH
  JE REINPUTAMTPAID
  SUB AMTPAID[1],30H
  MOV AX,0
  MOV AL,AMTPAID[0]            ;AX=0007
  MUL THOU                     ;AX=7000 (RM70)
  MOV PAIDWHOLE,AX
  MOV AX,0
  MOV AL,AMTPAID[1]            ;AX=0005
  MUL HUND                     ;AX=0500 (RM5)
  ADD PAIDWHOLE,AX             ;PAIDWHOLE=7000+0500=7500
  MOV AX,PAIDWHOLE
  CMP AX,TOTAL
  JL REINPUTAMTPAID
  JNL CALCCHANGE2DIGITJ
  
 CALCCHANGE2DIGITJ:
  JMP CALCCHANGE2DIGIT
  
 REINPUTAMTPAID:
  MOV AH,09H
  LEA DX,ERRM
  INT 21H
  JMP AMOUNTPAID
  
 CALCCHANGE3DIGIT:
  SUB AMTPAID[2],30H
  MOV AX,0
  MOV AL,AMTPAID[0]            ;AX=0001
  MUL TENT                     ;AX=10000D
  SUB AX,TOTAL                 ;AX=4276
  MOV CHANGE,AX                ;CHANGE=4276
  DIV HUND                     ;AX=7642
  MOV CHANGER[0],AH            ;CHANGER=76
  MOV CHANGEQ[0],AL            ;CHANGEQ=42
  
  MOV AX,0
  MOV AL,CHANGEQ[0]            ;AX=0042
  DIV TEN                      ;AX=0204
  MOV CHANGER[1],AH            ;CHANGER=02
  MOV CHANGEQ[1],AL            ;CHANGER=04
  
  MOV AX,0
  MOV AL,CHANGER[0]            ;AX=0076
  DIV TEN                      ;AX=0607
  MOV CHANGER[2],AH            ;CHANGER=06
  MOV CHANGEQ[2],AL            ;CHANGEQ=07
  JMP DISPLAYCHG
;------------------AMOUNT PAID INPUT & CHANGE CALCULATION MODULE------------------




;-----------------DISPLAY CHANGE = [4][2].[7][6
 DISPLAYCHG:
  MOV CX,2
  MOV SI,1
  CONVHEX3:
   ADD CHANGEQ[SI],30H
   ADD CHANGER[SI],30H
   INC SI
   LOOP CONVHEX3
   
  MOV AH,09H
  LEA DX,CHANGEM
  INT 21H
  
  CMP CHANGEQ[1],"0"    ;REMOVE EXTRA 0 IN FRONT
  JE SINGLEDIGITCHG
  MOV AH,02H
  MOV DL,CHANGEQ[1]
  INT 21H
 
 SINGLEDIGITCHG:
  MOV AH,02H
  MOV DL,CHANGER[1]
  INT 21H
  
  MOV AH,02H
  MOV DL,2EH       ;DISPLAY POINT
  INT 21H
  
  MOV AH,02H
  MOV DL,CHANGEQ[2]
  INT 21H
  
  MOV AH,02H
  MOV DL,CHANGER[2]
  INT 21H
  JMP MOREWAFFLE
  
 CALCCHANGE2DIGIT:
  SUB AX,TOTAL                 ;AX=7500-5724=1776
  DIV HUND                     ;AX=7617
  MOV CHANGER[0],AH            ;CHANGER=76
  MOV CHANGEQ[0],AL            ;CHANGEQ=17
  
  MOV AX,0
  MOV AL,CHANGEQ[0]            ;AX=0017
  DIV TEN                      ;AX=0701
  MOV CHANGER[1],AH            ;CHANGER=07
  MOV CHANGEQ[1],AL            ;CHANGER=01
  
  MOV AX,0
  MOV AL,CHANGER[0]            ;AX=0076
  DIV TEN                      ;AX=0607
  MOV CHANGER[2],AH            ;CHANGER=06
  MOV CHANGEQ[2],AL            ;CHANGEQ=07
  JMP DISPLAYCHG
;------------------DISPLAY MEMBER DISCOUNT, SST, TOTAL & CHANGE MODULE ENDS------------------




EXIT:
 MOV AH,09H
 LEA DX,EXITPROGM
 INT 21H

ACCESSDENIED:
 MOV AH,4CH
 INT 21H
MAIN ENDP
END MAIN